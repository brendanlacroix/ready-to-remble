{"version":3,"sources":["components/SizeInput.js","components/SelectorGroup.js","components/SizeInputs.js","components/AddSelector.js","components/CSSDisplay.js","App.js","serviceWorker.js","index.js"],"names":["SizeInput","_this$props","this","props","endpoint","name","onChange","type","selector","value","wrapperClasses","classes","classnames","react_default","a","createElement","className","htmlFor","concat","id","data-endpoint","data-selector","data-property","Component","SelectorGroup","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isDeleteHover","onDeleteMouseEnter","bind","assertThisInitialized","onDeleteMouseLeave","setState","onRemoveSelector","sizes","defineProperty","src_components_SizeInput","minimum","fontSize","maximum","lineHeight","onMouseEnter","onMouseLeave","onClick","SizeInputs","keys","map","key","src_components_SelectorGroup","assign","AddSelector","onSubmit","event","target","preventDefault","placeholder","disabled","length","PreviewWindow","browserDefaultFontSize","minimumBrowserWidth","maximumBrowserWidth","getAverageScaling","minimumSize","maximumSize","minimumFontSizeInREM","getRootMinimumFontSizeInREM","viewportCalc","scaleCalc","averageScaleMin","averageScaleMax","fontSizeScaleCalc","getMaximumBrowserWidthInREM","getMinimumBrowserWidthInREM","minimumLineHeightInREM","lineHeightScaleCalc","logCalculations","fontSizeMin","lineHeightMin","fontSizeMax","getRootMaximumFontSizeInREM","lineHeightMax","console","log","averageFontSizeScale","averageLineHeightScale","forEach","Math","round","_this2","code","getRootStyle","getStyleDeclaration","prism_default","style","ghcolors","App","_minimum","_maximum","addSelector","removeSelector","updateTypography","objectSpread","e","valueInt","parseInt","isNaN","dataset","property","role","src_components_SizeInputs","src_components_AddSelector","components_CSSDisplay","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce954b69.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\n\nimport './SizeInput.css';\n\nclass SizeInput extends Component {\n  render() {\n    const {\n      endpoint,\n      name,\n      onChange,\n      type,\n      selector,\n      value,\n      wrapperClasses\n    } = this.props;\n\n    const classes = classnames('SizeInput', wrapperClasses);\n\n    return (\n      <div className={classes}>\n        <label className=\"SizeInput-label\" htmlFor={name}>{`${ endpoint } ${ type === 'lineHeight' ? 'line-height' : 'font-size' }:`}</label>\n        <input\n          id={name}\n          className=\"SizeInput-field\"\n          data-endpoint={endpoint}\n          data-selector={selector}\n          data-property={type}\n          onChange={onChange}\n          value={value} />\n      </div>\n    );\n  }\n}\n\nexport default SizeInput;\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\n\nimport SizeInput from './SizeInput';\n\nimport './SelectorGroup.css';\n\nclass SelectorGroup extends Component {\n  state = {\n    isDeleteHover : false\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onDeleteMouseEnter = this.onDeleteMouseEnter.bind(this);\n    this.onDeleteMouseLeave = this.onDeleteMouseLeave.bind(this);\n  }\n\n  onDeleteMouseEnter() {\n    this.setState({ isDeleteHover : true })\n  }\n\n  onDeleteMouseLeave() {\n    this.setState({ isDeleteHover : false })\n  }\n\n  render() {\n    const {\n      onChange,\n      onRemoveSelector,\n      selector,\n      sizes\n    } = this.props;\n\n    const classes = classnames('SelectorGroup', {\n      [`SelectorGroup-remove-selector-hover`] : this.state.isDeleteHover\n    });\n\n    return (\n      <div className={classes}>\n        <strong><span className=\"SelectorGroup-selector\">{selector}</span> {\"{\"}</strong>\n        <SizeInput endpoint=\"minimum\" wrapperClasses=\"SelectorGroup-input\" onChange={onChange} type=\"fontSize\" name={`${selector}-min-font-size`} selector={selector} value={sizes.minimum[selector].fontSize} />\n        <SizeInput endpoint=\"maximum\" wrapperClasses=\"SelectorGroup-input\" onChange={onChange} type=\"fontSize\" name={`${selector}-max-font-size`} selector={selector} value={sizes.maximum[selector].fontSize} />\n\n        <SizeInput endpoint=\"minimum\" wrapperClasses=\"SelectorGroup-input\" onChange={onChange} type=\"lineHeight\" name={`${selector}-min-line-height`} selector={selector} value={sizes.minimum[selector].lineHeight} />\n        <SizeInput endpoint=\"maximum\" wrapperClasses=\"SelectorGroup-input\" onChange={onChange} type=\"lineHeight\" name={`${selector}-max-line-height`} selector={selector} value={sizes.maximum[selector].lineHeight} />\n\n        <button className=\"SelectorGroup-remove-selector\" onMouseEnter={this.onDeleteMouseEnter} onMouseLeave={this.onDeleteMouseLeave} onClick={() => onRemoveSelector(selector)}>X</button>\n        <strong>{\"}\"}</strong>\n      </div>\n    );\n  }\n}\n\nexport default SelectorGroup;\n","import React, { Component } from 'react';\n\nimport SelectorGroup from './SelectorGroup';\n\nimport './SizeInputs.css';\n\nclass SizeInputs extends Component {\n  render() {\n    return (\n      <section className=\"SizeInputs\">\n        {\n          Object.keys(this.props.sizes.minimum).map((selector, key) => {\n            return <SelectorGroup key={key} selector={selector} {...this.props} />;\n          })\n        }\n      </section>\n    );\n  }\n}\n\nexport default SizeInputs;\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\n\nimport './AddSelector.css';\n\nclass AddSelector extends Component {\n  state = {\n    selector : ''\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({ selector : event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.props.onSubmit(this.state.selector);\n  }\n\n  render() {\n    const classes = classnames('AddSelector', this.props.wrapperClasses);\n\n    return (\n      <div className={classes}>\n        <form className=\"AddSelector-form\" onSubmit={this.onSubmit}>\n          <input className=\"AddSelector-input\" type=\"text\" name=\"selector\" onChange={this.onChange} placeholder=\"Add a selector...\" />\n          <input className=\"AddSelector-submit\" type=\"submit\" disabled={!this.state.selector.length} value=\"+\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddSelector;\n","import React, { Component } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter/prism';\nimport { ghcolors } from 'react-syntax-highlighter/styles/prism';\n\nimport './CSSDisplay.css';\n\nclass PreviewWindow extends Component {\n  browserDefaultFontSize = 16;\n  minimumBrowserWidth = 320;\n  maximumBrowserWidth = 1440;\n\n  getMinimumBrowserWidthInREM() {\n    return this.minimumBrowserWidth / this.getAverageScaling(this.props.sizes.minimum);\n  }\n  getMaximumBrowserWidthInREM() {\n    return this.maximumBrowserWidth / this.getAverageScaling(this.props.sizes.maximum);\n  }\n  getRootMinimumFontSizeInREM() {\n    return this.getAverageScaling(this.props.sizes.minimum) / this.browserDefaultFontSize;\n  }\n  getRootMaximumFontSizeInREM() {\n    return this.getAverageScaling(this.props.sizes.maximum) / this.browserDefaultFontSize;\n  }\n  getRootStyle()   {\n    const minimumSize = this.getAverageScaling(this.props.sizes.minimum);\n    const maximumSize = this.getAverageScaling(this.props.sizes.maximum);\n    const minimumFontSizeInREM = this.getRootMinimumFontSizeInREM();\n    const viewportCalc = this.minimumBrowserWidth / 100;\n    const scaleCalc = (100 * (maximumSize - minimumSize) / (this.maximumBrowserWidth - this.minimumBrowserWidth));\n\n    return `\n      :root {\n        font-size: calc(${minimumFontSizeInREM}rem + ((1vw - ${viewportCalc}px) * ${scaleCalc}));\n      }`;\n  }\n  getStyleDeclaration(selector) {\n    const averageScaleMin = this.getAverageScaling(this.props.sizes.minimum);\n    const averageScaleMax = this.getAverageScaling(this.props.sizes.maximum);\n\n    const minimumFontSizeInREM = this.props.sizes.minimum[selector].fontSize / averageScaleMin;\n    const maximumFontSizeInREM = this.props.sizes.maximum[selector].fontSize / averageScaleMax;\n    const fontSizeScaleCalc = (100 * (maximumFontSizeInREM - minimumFontSizeInREM) / (this.getMaximumBrowserWidthInREM() - this.getMinimumBrowserWidthInREM()));\n\n    const minimumLineHeightInREM = this.props.sizes.minimum[selector].lineHeight / averageScaleMin;\n    const maximumLineHeightInREM = this.props.sizes.maximum[selector].lineHeight / averageScaleMax;\n    const lineHeightScaleCalc = (100 * (maximumLineHeightInREM - minimumLineHeightInREM) / (this.getMaximumBrowserWidthInREM() - this.getMinimumBrowserWidthInREM()));\n\n    this.logCalculations(selector, minimumFontSizeInREM, minimumLineHeightInREM, fontSizeScaleCalc, lineHeightScaleCalc);\n\n    return `\n      ${selector} {\n        font-size: calc(${minimumFontSizeInREM}rem + ((1vw - ${(this.getMinimumBrowserWidthInREM() / 100)}rem) * ${fontSizeScaleCalc}));\n        line-height: calc(${minimumLineHeightInREM}rem + ((1vw - ${(this.getMinimumBrowserWidthInREM() / 100)}rem) * ${lineHeightScaleCalc}));\n      }`;\n  }\n  logCalculations(selector, minimumFontSizeInREM, minimumLineHeightInREM, fontSizeScaleCalc, lineHeightScaleCalc) {\n    const fontSizeMin = (minimumFontSizeInREM*(this.getRootMinimumFontSizeInREM()*16)) + ((3.2 - ((this.getMinimumBrowserWidthInREM() / 100)*(this.getRootMinimumFontSizeInREM()*16))) * fontSizeScaleCalc);\n    const lineHeightMin = (minimumLineHeightInREM*(this.getRootMinimumFontSizeInREM()*16)) + ((3.2 - ((this.getMinimumBrowserWidthInREM() / 100)*(this.getRootMinimumFontSizeInREM()*16))) * lineHeightScaleCalc);\n    const fontSizeMax = (minimumFontSizeInREM*(this.getRootMaximumFontSizeInREM()*16)) + ((14.4 - ((this.getMinimumBrowserWidthInREM() / 100)*(this.getRootMaximumFontSizeInREM()*16))) * fontSizeScaleCalc);\n    const lineHeightMax = (minimumLineHeightInREM*(this.getRootMaximumFontSizeInREM()*16)) + ((14.4 - ((this.getMinimumBrowserWidthInREM() / 100)*(this.getRootMaximumFontSizeInREM()*16))) * lineHeightScaleCalc);\n\n    console.log('---------------------------------------------------------------------');\n    console.log(`Selector: \"${selector}\"`);\n\n    if (this.props.sizes.minimum[selector].fontSize !== fontSizeMin) {\n      console.log(`%cfont-size at ${this.minimumBrowserWidth}:    ${fontSizeMin}px`, 'color: red');\n    } else {\n      console.log(`font-size at ${this.minimumBrowserWidth}:    ${fontSizeMin}px`);\n    }\n\n    if (this.props.sizes.minimum[selector].lineHeight !== lineHeightMin) {\n      console.log(`%cline-height at ${this.minimumBrowserWidth}:  ${lineHeightMin}px`, 'color: red');\n    } else {\n      console.log(`line-height at ${this.minimumBrowserWidth}:  ${lineHeightMin}px`);\n    }\n\n    if (this.props.sizes.maximum[selector].fontSize !== fontSizeMax) {\n      console.log(`%cfont-size at ${this.maximumBrowserWidth}:   ${fontSizeMax}px`, 'color: red');\n    } else {\n      console.log(`font-size at ${this.maximumBrowserWidth}:   ${fontSizeMax}px`);\n    }\n\n    if (this.props.sizes.maximum[selector].lineHeight !== lineHeightMax) {\n      console.log(`%cline-height at ${this.maximumBrowserWidth}: ${lineHeightMax}px`, 'color: red');\n    } else {\n      console.log(`line-height at ${this.maximumBrowserWidth}: ${lineHeightMax}px`);\n    }\n  }\n  getAverageScaling(sizes) {\n    let averageFontSizeScale = 0;\n    let averageLineHeightScale = 0;\n\n    Object.keys(sizes).forEach((value) => {\n      averageFontSizeScale += sizes[value].fontSize;\n      averageLineHeightScale += sizes[value].lineHeight;\n    });\n\n    return Math.round((averageFontSizeScale + averageLineHeightScale) / (Object.keys(sizes).length * 2));\n  }\n  render() {\n    console.log('Average (min): ', this.getAverageScaling(this.props.sizes.minimum));\n    console.log('Average (max): ', this.getAverageScaling(this.props.sizes.maximum));\n\n    console.log('Browser min width REM', this.getMinimumBrowserWidthInREM());\n    console.log('Browser max width REM', this.getMaximumBrowserWidthInREM());\n\n    let code = this.getRootStyle();\n\n    Object.keys(this.props.sizes.minimum).forEach((value, key) => {\n      code += this.getStyleDeclaration(value);\n    });\n\n    return (\n      <div className=\"CSSDisplay\">\n        <div className=\"CSSDisplay-key\">\n          <h3>{`At ${this.minimumBrowserWidth}px browser width, divide pixels by ${this.getAverageScaling(this.props.sizes.minimum)} to convert to rems.`}</h3>\n          <h3>{`At ${this.maximumBrowserWidth}px browser width, divide pixels by ${this.getAverageScaling(this.props.sizes.maximum)} to convert to rems.`}</h3>\n        </div>\n        <pre>\n          <SyntaxHighlighter style={ghcolors}>{ code }</SyntaxHighlighter>\n        </pre>\n      </div>\n    );\n  }\n}\n\nexport default PreviewWindow;\n","import React, { Component } from 'react';\n\nimport SizeInputs from './components/SizeInputs';\nimport AddSelector from './components/AddSelector';\nimport CSSDisplay from './components/CSSDisplay';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    sizes : {\n      minimum : {\n        [`h1, .h1`] : {\n          fontSize   : 35,\n          lineHeight : 42\n        },\n        [`h2, .h2`] : {\n          fontSize   : 22,\n          lineHeight : 28\n        },\n        [`h3, .h3, .label`] : {\n          fontSize   : 14,\n          lineHeight : 20\n        },\n        body : {\n          fontSize   : 17,\n          lineHeight : 21\n        },\n        [`.statCallout`] : {\n          fontSize   : 35,\n          lineHeight : 42\n        },\n        [`.quoteCallout`] : {\n          fontSize   : 35,\n          lineHeight : 40\n        }\n      },\n      maximum : {\n        [`h1, .h1`] : {\n          fontSize   : 66,\n          lineHeight : 76\n        },\n        [`h2, .h2`] : {\n          fontSize   : 42,\n          lineHeight : 50\n        },\n        [`h3, .h3, .label`] : {\n          fontSize   : 17,\n          lineHeight : 20\n        },\n        body : {\n          fontSize   : 20,\n          lineHeight : 30\n        },\n        [`.statCallout`] : {\n          fontSize   : 64,\n          lineHeight : 74\n        },\n        [`.quoteCallout`] : {\n          fontSize   : 42,\n          lineHeight : 50\n        }\n      }\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.addSelector = this.addSelector.bind(this);\n    this.removeSelector = this.removeSelector.bind(this);\n    this.updateTypography = this.updateTypography.bind(this);\n  }\n\n  addSelector(selector) {\n    const sizes = {...this.state.sizes};\n\n    sizes.minimum[selector] = {\n      fontSize   : 0,\n      lineHeight : 0\n    };\n\n    sizes.maximum[selector] = {\n      fontSize   : 0,\n      lineHeight : 0\n    };\n\n    this.setState({ sizes });\n  }\n\n  removeSelector(selector) {\n    const sizes = {...this.state.sizes};\n\n    delete sizes.minimum[selector];\n    delete sizes.maximum[selector];\n\n    this.setState({ sizes });\n  }\n\n  updateTypography(e) {\n    const sizes = {...this.state.sizes};\n    const valueInt = parseInt(e.target.value) || 0;\n\n    if (!isNaN(valueInt)) {\n      sizes[e.target.dataset.endpoint][e.target.dataset.selector][e.target.dataset.property] = valueInt;\n    }\n\n    this.setState({ sizes });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\"><span role=\"presentation\" className=\"App-logo\">🤼‍♀️</span>Ready to REMble</h1>\n          <div className=\"App-description\">\n            <p>\n              Using <span className=\"App-ms\">rem</span> and <span className=\"App-ms\">vw</span>,\n              you can scale your site to look great on any browser... with less fuss (and less ugly whitespace <span role=\"presentation\" className=\"App-emoji\">😓</span>) than CSS grid systems.\n            </p>\n            <p>\n              The problem? It's unlikely that everything scales the same way from mobile to desktop. Your <span className=\"App-ms\">body</span>\n              text might only get a big bigger, while your <span className=\"App-ms\">h1</span> shoots to double the size <span role=\"presentation\" className=\"App-emoji\">🚀</span>. Suddenly,\n              <span className=\"App-ms\">rem</span> isn't saving you any time &mdash; you're still writing media queries to\n              tweak your <span className=\"App-ms\">font-size</span>.\n            </p>\n            <p>\n              <strong>Ready to REmble</strong> takes all your <span className=\"App-ms\">font-size</span> and <span className=\"App-ms\">line-height</span>\n              values and calculates an <em>average</em> scaling function <span role=\"presentation\" className=\"App-emoji\">📈</span>. Put that in your <span className=\"App-ms\">:root</span>\n              and you can use <span className=\"App-ms\">rem</span> <em>anywhere</em> to get an appropriate measure.\n              Use <span className=\"App-ms\">rem</span> for margins, paddings, height, width, <em>everything</em>.\n            </p>\n            <p>\n              Then, that average scaling function is used as the base to create tailored, <span className=\"App-ms\">vw</span>-driven\n              functions for each font style you define. Your typography will scale exactly as you specify, leaving you with\n              <span role=\"presentation\" className=\"App-emoji\">👏</span>&nbsp;balanced&nbsp;<span role=\"presentation\" className=\"App-emoji\">👏</span>&nbsp;whitespace&nbsp;<span role=\"presentation\" className=\"App-emoji\">👏</span> at <span role=\"presentation\" className=\"App-emoji\">👏</span> any <span role=\"presentation\" className=\"App-emoji\">👏</span> viewport <span role=\"presentation\" className=\"App-emoji\">👏</span>&nbsp;width\n              and no media queries to worry about.\n            </p>\n            <p className=\"App-last-description-paragraph\">\n              <span role=\"presentation\" className=\"App-big-emoji\">🎉</span>&nbsp;<span role=\"presentation\" className=\"App-big-emoji\">🎉</span>\n            </p>\n          </div>\n        </header>\n        <section className=\"App-inputs\">\n          <SizeInputs onChange={this.updateTypography} onRemoveSelector={this.removeSelector} sizes={this.state.sizes} />\n          <AddSelector wrapperClasses=\"App-add-selector\" onSubmit={this.addSelector} />\n        </section>\n\n\n        <CSSDisplay sizes={this.state.sizes} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}